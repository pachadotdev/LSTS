% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smooth_periodogram.R
\name{smooth_periodogram}
\alias{smooth_periodogram}
\title{Smoothing periodogram}
\usage{
smooth_periodogram(y, plot = TRUE, spar = 0)
}
\arguments{
\item{y}{(type: numeric) data vector.}

\item{plot}{(type: logical) logical argument which allows to plot the
periodogram. Defaults to TRUE.}

\item{spar}{(type: numeric) smoothing parameter, typically (but not
necessarily) in \eqn{(0,1].}}
}
\value{
A list with with the smooth periodogram and the lambda values
}
\description{
This function returns the smoothing periodogram of a stationary
time serie, its plot and its Fourier frequency.
}
\details{
\code{smooth_periodogram} computes the periodogram from \code{y} vector and
then smooth it with \emph{smoothing spline} method, which basically
approximates a curve using a cubic spline (see more details in
\code{\link[stats]{smooth.spline}}). \eqn{\lambda} is the Fourier frequency
obtained through \code{\link{periodogram}}.

It must have caution with the minimum length of \code{y}, because
\code{smooth.spline} requires the entered vector has at least length 4 and
the length of \code{y} does not equal to the length of the data of the
periodogram that \code{smooth.spline} receives.

If it presents problems with tol (\bold{tol}erance), see
\code{\link[stats]{smooth.spline}}.
}
\examples{
# AR(1) simulated
require(ggplot2)
set.seed(1776)
ts.sim <- arima.sim(n = 1000, model = list(order = c(1, 0, 0), ar = 0.7))
per <- periodogram(ts.sim)
aux <- smooth_periodogram(ts.sim, plot = FALSE, spar = .7)

sm_p <- data.frame(x = aux$lambda, y = aux$smooth_periodogram)
sp_d <- data.frame(x = aux$lambda,
 y = spectral_density(ar = 0.7, lambda = aux$lambda))

g <- per$plot
g +
 geom_line(data = sm_p, aes(x,y), color = "#ff7f0e") +
 geom_line(data = sp_d, aes(x,y), color = "#d31244")
  
}
\seealso{
\code{\link{smooth.spline}}, \code{\link{periodogram}}
}
